class Solution:
    def minWindow(self, s: str, t: str) -> str:
        from collections import Counter
        if not s or not t:
            return ""
        if s == t:
            return s
        if len(t) > len(s):
            return ""
        t_count = Counter(t)
        current_count = Counter()
        start = 0
        min_len = float("inf")
        min_start = 0
        required = len(t_count)  
        formed = 0 
        left = 0
        for right in range(len(s)):
            current_count[s[right]] += 1
            if s[right] in t_count and current_count[s[right]] == t_count[s[right]]:
                formed += 1
            while left <= right and formed == required:
                if (right - left + 1) < min_len:
                    min_len = right - left + 1
                    min_start = left
                current_count[s[left]] -= 1
                if s[left] in t_count and current_count[s[left]] < t_count[s[left]]:
                    formed -= 1
                left += 1
        return "" if min_len == float("inf") else s[min_start:min_start + min_len]
